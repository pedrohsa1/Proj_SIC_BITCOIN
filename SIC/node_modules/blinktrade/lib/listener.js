'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
                                                                                                                                                                                                                                                                   * BlinkTradeJS SDK
                                                                                                                                                                                                                                                                   * (c) 2016-present BlinkTrade, Inc.
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * This file is part of BlinkTradeJS
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * This program is free software: you can redistribute it and/or modify
                                                                                                                                                                                                                                                                   * it under the terms of the GNU General Public License as published by
                                                                                                                                                                                                                                                                   * the Free Software Foundation, either version 3 of the License, or
                                                                                                                                                                                                                                                                   * (at your option) any later version.
                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                   * This program is distributed in the hope that it will be useful,
                                                                                                                                                                                                                                                                   * but WITHOUT ANY WARRANTY; without even the implied warranty of
                                                                                                                                                                                                                                                                   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                                                                                                                                                                                                                                                   * GNU General Public License for more details.
                                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                   * You should have received a copy of the GNU General Public License
                                                                                                                                                                                                                                                                   * along with this program.  If not, see <http://www.gnu.org/licenses/>.
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * 
                                                                                                                                                                                                                                                                   */

exports.getListeners = getListeners;
exports.generateRequestId = generateRequestId;
exports.getListener = getListener;
exports.getRequest = getRequest;
exports.registerRequest = registerRequest;
exports.registerEventEmitter = registerEventEmitter;
exports.registerListener = registerListener;
exports.deleteRequest = deleteRequest;

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _requestTypes = require('./constants/requestTypes');

var RequestTypes = _interopRequireWildcard(_requestTypes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var requests = {};
var listeners = {};

function getListeners() {
  return requests;
}

function generateRequestId() {
  return parseInt(String(1e7 * Math.random()), 10);
}

function getListener(msgType) {
  return listeners[msgType];
}

function getRequest(message) {
  var result = void 0;
  _lodash2.default.mapKeys(RequestTypes, function (key) {
    if (_lodash2.default.has(message, key) && message[key]) {
      result = _lodash2.default.find(requests[key], { ReqId: String(message[key]) }) || result;
    }
  });

  return result;
}

function registerRequest(message, promise) {
  _lodash2.default.mapKeys(RequestTypes, function (key) {
    if (_lodash2.default.has(message, key)) {
      requests[key] = requests[key] || [];
      requests[key].push(_extends({ ReqId: String(message[key]) }, promise));
    }
  });

  return requests;
}

function registerEventEmitter(message, callback) {
  _lodash2.default.mapKeys(RequestTypes, function (key) {
    if (_lodash2.default.has(message, key)) {
      if (requests[key] !== []) {
        var index = _lodash2.default.findIndex(requests[key], { ReqId: String(message[key]) });
        requests[key][index] = _extends({}, requests[key][index], {
          resolve: null,
          reject: null,
          callback: callback
        });
      }
    }
  });

  return requests;
}

function registerListener(msgType, callback) {
  listeners[msgType] = listeners[msgType] || [];
  listeners[msgType] = callback;
}

function deleteRequest(key) {
  requests = _lodash2.default.omit(requests, [key]);
  return requests;
}